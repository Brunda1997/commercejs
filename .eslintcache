[{"D:\\ecommerece\\src\\index.js":"1","D:\\ecommerece\\src\\App.js":"2","D:\\ecommerece\\src\\lib\\commerce.js":"3","D:\\ecommerece\\src\\components\\index.js":"4","D:\\ecommerece\\src\\components\\Products\\Products.jsx":"5","D:\\ecommerece\\src\\components\\CheckoutForm\\Checkout\\Checkout.jsx":"6","D:\\ecommerece\\src\\components\\Products\\Product\\Product.jsx":"7","D:\\ecommerece\\src\\components\\CheckoutForm\\Review.jsx":"8","D:\\ecommerece\\src\\components\\Navbar\\styles.js":"9","D:\\ecommerece\\src\\components\\Cart\\styles.js":"10","D:\\ecommerece\\src\\components\\CheckoutForm\\Checkout\\styles.js":"11","D:\\ecommerece\\src\\components\\CheckoutForm\\AddressForm.jsx":"12","D:\\ecommerece\\src\\components\\Cart\\Cart.jsx":"13","D:\\ecommerece\\src\\components\\CheckoutForm\\CustomTextField.jsx":"14"},{"size":147,"mtime":1606580861000,"results":"15","hashOfConfig":"16"},{"size":2704,"mtime":1606580861000,"results":"17","hashOfConfig":"16"},{"size":127,"mtime":1608868498424,"results":"18","hashOfConfig":"16"},{"size":232,"mtime":1606580861000,"results":"19","hashOfConfig":"16"},{"size":688,"mtime":1606580861000,"results":"20","hashOfConfig":"16"},{"size":3117,"mtime":1606580861000,"results":"21","hashOfConfig":"16"},{"size":1239,"mtime":1606580861000,"results":"22","hashOfConfig":"16"},{"size":892,"mtime":1606580861000,"results":"23","hashOfConfig":"16"},{"size":1565,"mtime":1606580861000,"results":"24","hashOfConfig":"16"},{"size":570,"mtime":1606580861000,"results":"25","hashOfConfig":"16"},{"size":1158,"mtime":1606580861000,"results":"26","hashOfConfig":"16"},{"size":4592,"mtime":1606580861000,"results":"27","hashOfConfig":"16"},{"size":1760,"mtime":1606580861000,"results":"28","hashOfConfig":"16"},{"size":533,"mtime":1606580861000,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},"3c2exc",{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"54","messages":"55","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"32"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\ecommerece\\src\\index.js",[],["61","62"],"D:\\ecommerece\\src\\App.js",[],"D:\\ecommerece\\src\\lib\\commerce.js",[],["63","64"],"D:\\ecommerece\\src\\components\\index.js",[],"D:\\ecommerece\\src\\components\\Products\\Products.jsx",[],"D:\\ecommerece\\src\\components\\CheckoutForm\\Checkout\\Checkout.jsx",["65"],"D:\\ecommerece\\src\\components\\Products\\Product\\Product.jsx",[],"D:\\ecommerece\\src\\components\\CheckoutForm\\Review.jsx",[],"D:\\ecommerece\\src\\components\\Navbar\\styles.js",[],"D:\\ecommerece\\src\\components\\Cart\\styles.js",[],"D:\\ecommerece\\src\\components\\CheckoutForm\\Checkout\\styles.js",[],"D:\\ecommerece\\src\\components\\CheckoutForm\\AddressForm.jsx",["66","67"],"import React, { useState, useEffect } from 'react';\nimport { InputLabel, Select, MenuItem, Button, Grid, Typography } from '@material-ui/core';\nimport { useForm, FormProvider } from 'react-hook-form';\nimport { Link } from 'react-router-dom';\n\nimport { commerce } from '../../lib/commerce';\nimport FormInput from './CustomTextField';\n\nconst AddressForm = ({ checkoutToken, test }) => {\n  const [shippingCountries, setShippingCountries] = useState([]);\n  const [shippingCountry, setShippingCountry] = useState('');\n  const [shippingSubdivisions, setShippingSubdivisions] = useState([]);\n  const [shippingSubdivision, setShippingSubdivision] = useState('');\n  const [shippingOptions, setShippingOptions] = useState([]);\n  const [shippingOption, setShippingOption] = useState('');\n  const methods = useForm();\n\n  const fetchShippingCountries = async (checkoutTokenId) => {\n    const { countries } = await commerce.services.localeListShippingCountries(checkoutTokenId);\n\n    setShippingCountries(countries);\n    setShippingCountry(Object.keys(countries)[0]);\n  };\n\n  const fetchSubdivisions = async (countryCode) => {\n    const { subdivisions } = await commerce.services.localeListSubdivisions(countryCode);\n\n    setShippingSubdivisions(subdivisions);\n    setShippingSubdivision(Object.keys(subdivisions)[0]);\n  };\n\n  const fetchShippingOptions = async (checkoutTokenId, country, stateProvince = null) => {\n    const options = await commerce.checkout.getShippingOptions(checkoutTokenId, { country, region: stateProvince });\n\n    setShippingOptions(options);\n    setShippingOption(options[0].id);\n  };\n\n  useEffect(() => {\n    fetchShippingCountries(checkoutToken.id);\n  }, []);\n\n  useEffect(() => {\n    if (shippingCountry) fetchSubdivisions(shippingCountry);\n  }, [shippingCountry]);\n\n  useEffect(() => {\n    if (shippingSubdivision) fetchShippingOptions(checkoutToken.id, shippingCountry, shippingSubdivision);\n  }, [shippingSubdivision]);\n\n  return (\n    <>\n      <Typography variant=\"h6\" gutterBottom>Shipping address</Typography>\n      <FormProvider {...methods}>\n        <form onSubmit={methods.handleSubmit((data) => test({ ...data, shippingCountry, shippingSubdivision, shippingOption }))}>\n          <Grid container spacing={3}>\n            <FormInput required name=\"firstName\" label=\"First name\" />\n            <FormInput required name=\"lastName\" label=\"Last name\" />\n            <FormInput required name=\"address1\" label=\"Address line 1\" />\n            <FormInput required name=\"email\" label=\"Email\" />\n            <FormInput required name=\"city\" label=\"City\" />\n            <FormInput required name=\"zip\" label=\"Zip / Postal code\" />\n            <Grid item xs={12} sm={6}>\n              <InputLabel>Shipping Country</InputLabel>\n              <Select value={shippingCountry} fullWidth onChange={(e) => setShippingCountry(e.target.value)}>\n                {Object.entries(shippingCountries).map(([code, name]) => ({ id: code, label: name })).map((item) => (\n                  <MenuItem key={item.id} value={item.id}>\n                    {item.label}\n                  </MenuItem>\n                ))}\n              </Select>\n            </Grid>\n            <Grid item xs={12} sm={6}>\n              <InputLabel>Shipping Subdivision</InputLabel>\n              <Select value={shippingSubdivision} fullWidth onChange={(e) => setShippingSubdivision(e.target.value)}>\n                {Object.entries(shippingSubdivisions).map(([code, name]) => ({ id: code, label: name })).map((item) => (\n                  <MenuItem key={item.id} value={item.id}>\n                    {item.label}\n                  </MenuItem>\n                ))}\n              </Select>\n            </Grid>\n            <Grid item xs={12} sm={6}>\n              <InputLabel>Shipping Options</InputLabel>\n              <Select value={shippingOption} fullWidth onChange={(e) => setShippingOption(e.target.value)}>\n                {shippingOptions.map((sO) => ({ id: sO.id, label: `${sO.description} - (${sO.price.formatted_with_symbol})` })).map((item) => (\n                  <MenuItem key={item.id} value={item.id}>\n                    {item.label}\n                  </MenuItem>\n                ))}\n              </Select>\n            </Grid>\n          </Grid>\n          <br />\n          <div style={{ display: 'flex', justifyContent: 'space-between' }}>\n            <Button component={Link} variant=\"outlined\" to=\"/cart\">Back to Cart</Button>\n            <Button type=\"submit\" variant=\"contained\" color=\"primary\">Next</Button>\n          </div>\n        </form>\n      </FormProvider>\n    </>\n  );\n};\n\nexport default AddressForm;\n","D:\\ecommerece\\src\\components\\Cart\\Cart.jsx",[],"D:\\ecommerece\\src\\components\\CheckoutForm\\CustomTextField.jsx",[],{"ruleId":"68","replacedBy":"69"},{"ruleId":"70","replacedBy":"71"},{"ruleId":"68","replacedBy":"72"},{"ruleId":"70","replacedBy":"73"},{"ruleId":"74","severity":1,"message":"75","line":36,"column":6,"nodeType":"76","endLine":36,"endColumn":12,"suggestions":"77"},{"ruleId":"74","severity":1,"message":"78","line":41,"column":6,"nodeType":"76","endLine":41,"endColumn":8,"suggestions":"79"},{"ruleId":"74","severity":1,"message":"80","line":49,"column":6,"nodeType":"76","endLine":49,"endColumn":27,"suggestions":"81"},"no-native-reassign",["82"],"no-negated-in-lhs",["83"],["82"],["83"],"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'activeStep' and 'history'. Either include them or remove the dependency array.","ArrayExpression",["84"],"React Hook useEffect has a missing dependency: 'checkoutToken.id'. Either include it or remove the dependency array.",["85"],"React Hook useEffect has missing dependencies: 'checkoutToken.id' and 'shippingCountry'. Either include them or remove the dependency array.",["86"],"no-global-assign","no-unsafe-negation",{"desc":"87","fix":"88"},{"desc":"89","fix":"90"},{"desc":"91","fix":"92"},"Update the dependencies array to be: [activeStep, cart, history]",{"range":"93","text":"94"},"Update the dependencies array to be: [checkoutToken.id]",{"range":"95","text":"96"},"Update the dependencies array to be: [checkoutToken.id, shippingCountry, shippingSubdivision]",{"range":"97","text":"98"},[1273,1279],"[activeStep, cart, history]",[1668,1670],"[checkoutToken.id]",[1913,1934],"[checkoutToken.id, shippingCountry, shippingSubdivision]"]